def for_day(pickup_day, order_items)
  if order_items.empty?
    return
  end

  counts = Hash.new(0)
  order_items.each { |oi| counts[oi.item.name] += oi.quantity }

  div do
    em("#{pickup_day.day_str}: ")

    item_names = counts.keys.natural_sort
    item_names.each_with_index do |name, i|
      span do
        if (count = counts[name]) > 1
          strong "#{count}x "
        end

        is_last = i + 1 == item_names.size
        span "#{name}#{is_last ? "" : ","}"
      end
    end
  end
end

pay_it_forward, pickupable_items = order_items.partition { |oi| oi.item.pay_it_forward? }
pickup_days = order_items.map(&:pickup_day).uniq.sort_by(&:pickup_at)

pickup_days.each do |pickup_day|
  day_items = pickupable_items.filter {|oi| oi.pickup_day == pickup_day }
  next if day_items.empty?

  for_day(pickup_day, day_items)  
end

if pay_it_forward.any?
  div do
    em do
      if (count = pay_it_forward.map(&:quantity).sum) > 1
        strong "#{count}x "
      end

      span pay_it_forward.first.item.name
    end
  end
end

if order_items.empty?
  em "No items"
end
